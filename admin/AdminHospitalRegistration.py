import pyodbc
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QMessageBox
import re



class hospReg(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1073, 801)
        MainWindow.setMaximumSize(QtCore.QSize(1073, 801))
        MainWindow.setStyleSheet("background-color: rgb(191, 140, 0);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)

        self.centralwidget.setObjectName("centralwidget")
        self.heading = QtWidgets.QLabel(self.centralwidget)
        self.heading.setGeometry(QtCore.QRect(310, 80, 431, 61))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(24)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.heading.setFont(font)
        self.heading.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.heading.setObjectName("heading")
        self.graphicsView_2 = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_2.setGeometry(QtCore.QRect(40, 40, 991, 711))
        self.graphicsView_2.setStyleSheet("background-color: rgb(59, 43, 1);")
        self.graphicsView_2.setObjectName("graphicsView_2")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(35, 31, 1001, 731))
        self.graphicsView.setStyleSheet("background-color: rgb(233, 255, 246);")
        self.graphicsView.setObjectName("graphicsView")
        self.h_id = QtWidgets.QLabel(self.centralwidget)
        self.h_id.setGeometry(QtCore.QRect(140, 250, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.h_id.setFont(font)
        self.h_id.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.h_id.setObjectName("h_id")
        self.h_name = QtWidgets.QLabel(self.centralwidget)
        self.h_name.setGeometry(QtCore.QRect(650, 250, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.h_name.setFont(font)
        self.h_name.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.h_name.setObjectName("h_name")
        self.h_city = QtWidgets.QLabel(self.centralwidget)
        self.h_city.setGeometry(QtCore.QRect(140, 370, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.h_city.setFont(font)
        self.h_city.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.h_city.setObjectName("h_city")
        self.h_Email = QtWidgets.QLabel(self.centralwidget)
        self.h_Email.setGeometry(QtCore.QRect(140, 490, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.h_Email.setFont(font)
        self.h_Email.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.h_Email.setObjectName("h_Email")
        self.h_area = QtWidgets.QLabel(self.centralwidget)
        self.h_area.setGeometry(QtCore.QRect(650, 360, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.h_area.setFont(font)
        self.h_area.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.h_area.setObjectName("h_area")
        self.h_paddword = QtWidgets.QLabel(self.centralwidget)
        self.h_paddword.setGeometry(QtCore.QRect(660, 490, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.h_paddword.setFont(font)
        self.h_paddword.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.h_paddword.setObjectName("h_paddword")
        self.hback = QtWidgets.QPushButton(self.centralwidget)
        self.hback.setGeometry(QtCore.QRect(660, 630, 201, 61))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.hback.setFont(font)
        self.hback.setStyleSheet("background-color: rgb(217, 217, 217);\n"
                                 "")
        self.hback.setObjectName("hback")
        self.h_submit = QtWidgets.QPushButton(self.centralwidget)
        self.h_submit.setGeometry(QtCore.QRect(310, 630, 201, 61))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.h_submit.setFont(font)
        self.h_submit.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.h_submit.setObjectName("h_submit")
        self.hid = QtWidgets.QLineEdit(self.centralwidget)
        self.hid.setGeometry(QtCore.QRect(140, 290, 301, 41))
        self.hid.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.hid.setObjectName("hid")
        self.hemail = QtWidgets.QLineEdit(self.centralwidget)
        self.hemail.setGeometry(QtCore.QRect(140, 530, 301, 41))
        self.hemail.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.hemail.setObjectName("hemail")
        self.hcity = QtWidgets.QLineEdit(self.centralwidget)
        self.hcity.setGeometry(QtCore.QRect(140, 410, 301, 41))
        self.hcity.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.hcity.setObjectName("hcity")
        self.hname = QtWidgets.QLineEdit(self.centralwidget)
        self.hname.setGeometry(QtCore.QRect(650, 290, 301, 41))
        self.hname.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.hname.setObjectName("hname")
        self.harea = QtWidgets.QLineEdit(self.centralwidget)
        self.harea.setGeometry(QtCore.QRect(650, 400, 301, 41))
        self.harea.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.harea.setObjectName("harea")
        self.hpassword = QtWidgets.QLineEdit(self.centralwidget)
        self.hpassword.setGeometry(QtCore.QRect(660, 530, 301, 41))
        self.hpassword.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.hpassword.setObjectName("spassword")
        self.graphicsView.raise_()
        self.graphicsView_2.raise_()
        self.heading.raise_()
        self.h_id.raise_()
        self.h_name.raise_()
        self.h_city.raise_()
        self.h_Email.raise_()
        self.h_area.raise_()
        self.h_paddword.raise_()
        self.hback.raise_()
        self.h_submit.raise_()
        self.hid.raise_()
        self.hemail.raise_()
        self.hcity.raise_()
        self.hname.raise_()
        self.harea.raise_()
        self.hpassword.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.hback.clicked.connect(lambda: self.hclosescr(MainWindow))
        self.h_submit.clicked.connect(self.HospitalRegistration)

    def hclosescr(self, MainWindow):
        MainWindow.hide()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.heading.setText(_translate("MainWindow", "  Hospital Registration"))
        self.h_id.setText(_translate("MainWindow", "   Hospital_Id"))
        self.h_name.setText(_translate("MainWindow", "   Hospital_Name"))
        self.h_city.setText(_translate("MainWindow", "  City"))
        self.h_Email.setText(_translate("MainWindow", "  Email_Id"))
        self.h_area.setText(_translate("MainWindow", "  Area"))
        self.h_paddword.setText(_translate("MainWindow", "  Password"))
        self.hback.setText(_translate("MainWindow", "<- BACK"))
        self.h_submit.setText(_translate("MainWindow", "SUBMIT"))

    def HospitalRegistration(self):
        h_id = self.hid.text()
        h_name = self.hname.text()
        h_area = self.harea.text()
        h_place = self.hcity.text()
        h_email = self.hemail.text()
        h_password = self.hpassword.text()

        msg = QMessageBox()
        msg1 = QMessageBox()

        regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
        if h_id == "" or h_name == "" or h_area == "" or h_place == "" or h_email == "" or h_password == "":
            msg.setIcon(QMessageBox.Warning)
            msg.setText("All Fields Required!")
            msg.setWindowTitle("Error")
            msg.exec_()
        elif not (re.search(regex, h_email)):
            msg1.setIcon(QMessageBox.Warning)
            print("invalid email id")
            msg1.setText("Enter valid Email_id!")
            msg1.setWindowTitle("Error")
            msg1.exec_()

        else:
            try:
                conn = pyodbc.connect(
                    "Driver={SQL Server Native Client 11.0};"
                    "Server=DESKTOP-EAC2CGC\KAUSHIK;"
                    "Database=forensic;"
                    "Trusted_Connection=yes;"
                )
                cur = conn.cursor()
                cur.execute("select * from hospital where h_email=?", h_email)
                row = cur.fetchone()
                print(row)
                if row != None:
                    msg.setText("User Aleady exists!!")
                    msg.setWindowTitle("Error")
                    msg.exec_()
                else:
                    cur.execute(
                        "insert into hospital(h_id, h_name, h_area, h_place, h_email, h_password) values(?,?,?,?,?,?);",
                        (h_id,
                         h_name,
                         h_area,
                         h_place,
                         h_email,
                         h_password,
                         )
                    )
                    msg.setText("Registration SuccessFull!!")
                    msg.setWindowTitle("Success")
                    msg.exec_()
                    conn.commit()
                    conn.close()
                    self.clear()

            except Exception as es:
                print(str(es))
                msg.setText(f"Error Due To: {str(es)}!")
                msg.setWindowTitle("Error")
                msg.exec_()

    def clear(self):
        self.hid.clear()
        self.hname.clear()
        self.harea.clear()
        self.hcity.clear()
        self.hemail.clear()
        self.hpassword.clear()